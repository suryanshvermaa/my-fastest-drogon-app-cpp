version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_prod
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-userdb}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: drogon_app_prod
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-userdb}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - PORT=${PORT:-3000}
    volumes:
      - app_uploads:/app/uploads
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
  app_uploads:
    driver: local

networks:
  app-network:
    driver: bridge 